

          ┌───────────────────────────┐
          │     Philosophe[i]         │
          └───────────────────────────┘
                     │
                     ▼
           ┌───────────────────┐
           │  take_forks       │
           └───────────────────┘
               │ lock(left_fork)
               │ lock(right_fork)
               ▼
           ┌───────────────────┐
           │       eat         │
           └───────────────────┘
               │ lock(meal_lock?) ou state_lock
               │ last_meal = current_time()
               │ meal_eaten++
               │ unlock(meal_lock?) ou state_lock
               ▼
           ┌───────────────────┐
           │  release_forks    │
           └───────────────────┘
               │ unlock(left_fork)
               │ unlock(right_fork)
               ▼
           ┌───────────────────┐
           │      sleep        │
           └───────────────────┘
               │ usleep(time_to_sleep)
               ▼
           ┌───────────────────┐
           │      think        │
           └───────────────────┘
               │
               └─> boucle tant que simulation_active = true


───────────────────────────────
       Thread de monitoring
───────────────────────────────

┌─────────────────────────────┐
│  for each Philosopher[i]    │
└─────────────────────────────┘
        │
        │ lock(meal_lock?) ou state_lock
        │ if (current_time - last_meal > time_to_die)
        │      simulation_active = false
        │ if (all meal_eaten >= meals_required)
        │      simulation_active = false
        │ unlock(meal_lock?) ou state_lock
        ▼
      (pause courte)
        │
        └─> boucle tant que simulation_active = true

